/* Media queries Breakpoint mixins */

@mixin for-mobile-layout {
  @media (max-width: $break-narrow) {
    @content;
  }
}

@mixin for-narrow-layout {
  @media (min-width: $break-narrow) {
    @content;
  }
}

@mixin for-normal-layout {
  @media (min-width: $break-normal) {
    @content;
  }
}

@mixin for-wide-layout {
  @media (min-width: $break-wide) {
    @content;
  }
}

@mixin layoutGTC($max) {
  grid-template-columns:
    minmax($layoutPadding, 1fr)
    minmax(auto, $max)
    minmax($layoutPadding, 1fr);
}

/* Media  Mixins */

//aspect ratio mixin
@mixin aspect-ratio($width: 1, $height: 1) {
  position: relative;
  overflow: hidden;
  &:before {
    content: "";
    display: block;
    width: 100%;
    padding-top: ($height / $width) * 100%;
  }
  > * {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
  > img {
    height: 100%;
    object-fit: cover;
  }
}

// Mixin for removing hover efects on iphone screen
@mixin hover-supported {
  @media not all and (pointer: coarse) {
    &:hover {
      @content;
    }
  }
}

//modal

@mixin modal-act($top: 36px) {
  position: absolute;
  top: $top;
  width: 304px;
  padding: 10px;
  z-index: 10;
  background-color: #ffffff;
  border-radius: 3px;
  box-shadow: 0 8px 16px -4px rgb(9 30 66 / 25%), 0 0 0 1px rgb(9 30 66 / 8%);
}

// Buttons

@mixin btn($type: regular, $bg: $clr1, $clr: $clr3, $padding: em(24px) em(44px), $hover: darken($bg, 8%)) {
  display: inline-flex;
  align-items: center;
  text-decoration: none;
  text-transform: uppercase;
  padding: $padding;
  line-height: 1.25;
  font-size: em(14px);
  font-variation-settings: "wght" 430;
  border: none;
  cursor: pointer;

  transition: background-color 0.2s;

  @if $type == regular {
    background-color: $bg;
    color: $clr;
    &:hover {
      background-color: $hover;
    }
  } @else if $type == dark {
    background-color: $clr2;
    color: $clr3;
    &:hover {
      background-color: $clr1;
      color: $clr3;
    }
  } @else if $type == light {
    background-color: $clr3;
    color: $clr2;
    &:hover {
      background-color: $clr1;
      color: $clr3;
    }
  }
}

@mixin board-btn($type: regular, $bg: $header-btn-clr, $clr: $clr3, $padding: $spacing, $hover: $header-btn-clr-dark) {
  width: fit-content;
  display: inline-flex;
  align-items: center;
  padding: $padding;
  background-color: $bg;
  margin-left: $spacing;
  // color: $clr;

  @if ($type == regular) {
    height: 30px;
  } @else {
    min-height: 38px;
  }
}

// Type

@mixin popupInput() {
  margin-top: 7px;
  display: block;
  line-height: 20px;
  padding: 8px 12px;
  background-color: #fafbfc;
  border: none;
  outline: none;
  border-radius: 3px;
  box-shadow: inset 0 0 0 2px #dfe1e6;
  font-size: 14px;
  transition-duration: 85ms;
  transition-property: background-color, border-color, box-shadow;
  transition-timing-function: ease;
  width: 100%;

  &:focus {
    box-shadow: inset 0 0 0 2px #0079bf;
    background-color: #fff;
  }
}

@mixin type($type: bold) {
  // type options:
  // 1.bold
  // 2.boldCondensed
  // 3.condensed
  @if $type == bold {
    font-variation-settings: "wght" 430;
  } @else if $type == boldCondensed {
    font-variation-settings: "wght" 430, "wdth" 80;
    letter-spacing: em(6.72px);
  } @else if $type == condensed {
    font-variation-settings: "wdth" 80;
    letter-spacing: em(6.72px);
  } @else if $type == light {
    font-variation-settings: "wght" 200;
  }
}

@mixin taskPreviewIcon() {
  font-size: 12px;
  color: $mainClr;
  display: flex;

  p {
    padding: 0 4px 0 2px;
  }

  span {
    font-size: 16px;
    height: 20px;
    line-height: 20px;
    width: 20px;
  }
}

@mixin icon($icon, $fz: 16px, $lh: 16px, $margin: inherit, $clr: #172b4d) {
  font-family: Trello;
  font-size: $fz;
  line-height: $lh;
  color: $clr;
  &::before {
    content: $icon;
    margin: $margin;
  }
}

@mixin boardHeader($content: none) {
  color: white;
  content: $content;
  font-size: 16px;
  font-family: trello;
}

@mixin lightBtn() {
  background-color: rgba(0, 0, 0, 0.1);
  border-radius: 3px;
  box-shadow: none;
  border: none;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;

  &:hover {
    background-color: rgba(255, 255, 255, 0.3);
  }

  &:active {
    background-color: rgba(255, 255, 255, 0.4);
  }
}

@mixin addSaveBtn($width: 53px, $margin: 5px 0 0 0, $clr: white) {
  background-color: #0079bf;
  border: none;
  color: $clr;
  width: $width;
  margin: $margin;

  &:hover {
    background-color: #026aa7;
  }

  &:active {
    background-color: #055a8c;
  }
}
